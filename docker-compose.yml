version: "3.8"

services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    environment: [ALLOW_ANONYMOUS_LOGIN=yes]
    ports: ["2191:2181"]

  kafka:
    image: bitnami/kafka:3.7
    depends_on: [zookeeper]
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    ports: ["9092:9092"]

  mlflow:
    image: python:3.12-slim
    working_dir: /srv
    command: >
      bash -lc "pip install mlflow boto3 &&
      mlflow server --host 0.0.0.0 --port 5000
      --backend-store-uri sqlite:////srv/mlflow.db
      --artifacts-destination s3://${S3_BUCKET}/mlflow-artifacts
      --static-prefix /mlflow"
    env_file: [.env]
    volumes:
      - ./mlruns:/srv

  api:
    build: ./api
    env_file: [.env]
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_BOOTSTRAP_SERVERS}
      - PREDICTIONS_TOPIC=${PREDICTIONS_TOPIC}
      - MODEL_URI=${MODEL_URI}
      - IMAGE_SIZE=${IMAGE_SIZE}
      - S3_BUCKET=${S3_BUCKET}
      - S3_DATA_PREFIX=${S3_DATA_PREFIX}
    depends_on: [kafka, mlflow]

  trainer:
    build: ./training
    env_file: [.env]
    depends_on: [mlflow]
    profiles: ["train"]

  prometheus:
    image: prom/prometheus:v2.54.1
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.external-url=/prometheus'
      - '--web.route-prefix=/prometheus'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on: [api]

  grafana:
    image: grafana/grafana:11.1.0
    environment:
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    depends_on: [prometheus]

  caddy:
    image: caddy:2.8
    depends_on: [api, grafana, prometheus, mlflow]
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    environment:
      # For basic auth (see Caddyfile below); fill these in
      - ADMIN_USER=${ADMIN_USER}
      - ADMIN_HASH=${ADMIN_HASH}
      # If you have a domain, set it in .env as SERVER_NAME=api.yourdomain.com
      - SERVER_NAME=${SERVER_NAME}

volumes:
  caddy_data:
  caddy_config:
