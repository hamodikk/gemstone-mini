# .github/workflows/ci-deploy.yml
name: ci-deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: ci-deploy
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.meta.outputs.sha }}
    env:
      IMAGE_API: ghcr.io/hamodikk/gemstone-mini-api
      IMAGE_TRAINER: ghcr.io/hamodikk/gemstone-mini-trainer
    steps:
      - uses: actions/checkout@v4

      - id: meta
        run: echo "sha=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push API
        uses: docker/build-push-action@v6
        with:
          context: ./api
          push: true
          tags: |
            ${{ env.IMAGE_API }}:latest
            ${{ env.IMAGE_API }}:${{ github.sha }}

      - name: Build & push TRAINER
        uses: docker/build-push-action@v6
        with:
          context: ./training
          push: true
          tags: |
            ${{ env.IMAGE_TRAINER }}:latest
            ${{ env.IMAGE_TRAINER }}:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Upload repo to EC2 (no secrets/artifacts)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          passphrase: ${{ secrets.EC2_SSH_PASSPHRASE }}
          source: "."
          target: "~/gemstone-mini"
          rm: false
          timeout: 90s
          command_timeout: 20m
          exclude: ".env,.git,**/__pycache__,mlruns,mlartifacts,caddy_data,caddy_config"

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          passphrase: ${{ secrets.EC2_SSH_PASSPHRASE }}
          port: ${{ secrets.EC2_PORT || 22 }}
          script: |
            set -euo pipefail
            cd ~/gemstone-mini

            GHCR_USER="${{ secrets.GHCR_PULL_USER }}"
            GHCR_PAT="${{ secrets.GHCR_PULL_PAT }}"

            if [ ! -f .env ]; then
              echo "[ERROR] .env is missing on EC2. Create it once and keep it there."
              exit 1
            fi

            docker compose down --remove-orphans || true
            docker system prune -af --volumes || true
            docker builder prune -af || true

            if [ -n "${GHCR_USER}" ] && [ -n "${GHCR_PAT}" ]; then
              echo "${GHCR_PAT}" | docker login ghcr.io -u "${GHCR_USER}" --password-stdin
            fi

            # Pull new images (now guaranteed to exist because build job finished)
            docker compose pull || true

            docker compose up -d --force-recreate --remove-orphans
            docker compose ps
            docker system df || true
