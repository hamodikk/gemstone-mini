name: deploy-to-ec2

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: deploy-to-ec2
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Upload repo to EC2 (no secrets/artifacts)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          passphrase: ${{ secrets.EC2_SSH_PASSPHRASE }}
          source: "."
          target: "~/gemstone-mini"
          rm: false
          timeout: 90s
          command_timeout: 20m
          exclude: ".env,.git,**/__pycache__,mlruns,mlartifacts,caddy_data,caddy_config"

      - name: Pull & start on EC2 (login to GHCR if private)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          passphrase: ${{ secrets.EC2_SSH_PASSPHRASE }}
          port: ${{ secrets.EC2_PORT || 22 }}
          script: |
            set -euo pipefail
            cd ~/gemstone-mini

            # Export GHCR creds from GitHub Secrets (leave empty if packages are public)
            GHCR_USER="${{ secrets.GHCR_PULL_USER }}"
            GHCR_PAT="${{ secrets.GHCR_PULL_PAT }}"

            if [ ! -f .env ]; then
              echo "[ERROR] .env is missing on EC2. Create it once and keep it there."
              exit 1
            fi

            echo "==> Stop stack to free files..."
            docker compose down --remove-orphans || true

            echo "==> Prune EVERYTHING to reclaim space (images, containers, volumes, builder cache)"
            docker system prune -af --volumes || true
            docker builder prune -af || true

            # Log in to GHCR only if creds were provided (for private images)
            if [ -n "${GHCR_USER}" ] && [ -n "${GHCR_PAT}" ]; then
              echo "==> Logging into GHCR..."
              echo "${GHCR_PAT}" | docker login ghcr.io -u "${GHCR_USER}" --password-stdin
            else
              echo "==> GHCR creds not provided; assuming images are public."
            fi

            echo "==> Pull images"
            docker compose pull || true

            echo '==> Start stack'
            docker compose up -d --force-recreate --remove-orphans

            echo '==> Status'
            docker compose ps

            echo '==> Disk AFTER'
            df -h || true
            docker system df || true